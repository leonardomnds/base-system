datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Usuario {
  id String @id @default(uuid()) @db.VarChar(100)
  usuario String @unique @db.VarChar(100)
  senha String @db.VarChar(100)
  nome String @db.VarChar(100)
  ativo Boolean @default(true)
  data_cadastro DateTime @default(now())
  pessoas Pessoa[]
  @@map("usuarios")
}

model CategoriaPessoa {  
  id String @id @default(uuid()) @db.VarChar(100)
  descricao String @unique @db.VarChar(100)
  pessoas Pessoa[]
  @@map("categorias_pessoa")
}

model GrupoPessoa {
  id String @id @default(uuid()) @db.VarChar(100)
  descricao String @unique @db.VarChar(100)
  pessoas Pessoa[]
  @@map("grupos_pessoa")
}

model Pessoa {
  id String @id @default(uuid()) @db.VarChar(100)
  codigo Int @unique
  cpf_cnpj String @db.VarChar(18) @unique
  nome String @db.VarChar(100)
  fantasia String? @db.VarChar(100)
  rg_insc_estadual String? @db.VarChar(50)
  insc_municipal String? @db.VarChar(50)
  telefone String? @db.VarChar(20)
  celular String? @db.VarChar(20)
  email String? @db.VarChar(255)
  cep String? @db.VarChar(9)
  logradouro String? @db.VarChar(255)
  numero String? @db.VarChar(50)
  bairro String? @db.VarChar(255)
  cidade String? @db.VarChar(255)
  uf String? @db.VarChar(2)
  complemento String? @db.VarChar(255)
  senha_acesso String @db.VarChar(100) @default("")
  grupo_id String? @db.VarChar(100)
  grupo GrupoPessoa? @relation(fields: [grupo_id], references: [id])
  categoria_id String? @db.VarChar(100)
  categoria CategoriaPessoa? @relation(fields: [categoria_id], references: [id])
  ativo Boolean @default(true)
  data_cadastro DateTime @default(now())  
  usuario_id String @db.VarChar(100)
  usuario Usuario @relation(fields: [usuario_id], references: [id])
  contatos ContatoPessoa[]
  intrumentos Instrumento[]
  @@map("pessoas")
}

model ContatoPessoa {
  id String @id @default(uuid()) @db.VarChar(100)
  pessoa_id String @db.VarChar(100)
  pessoa Pessoa @relation(fields: [pessoa_id], references: [id])
  nome String @db.VarChar(100)
  descricao String @db.VarChar(100)
  telefone String? @db.VarChar(20)
  celular String? @db.VarChar(20)
  email String? @db.VarChar(255)
  data_cadastro DateTime @default(now())
  @@map("contatos_pessoas")
}

model Instrumento {
  id String @id @default(uuid()) @db.VarChar(100)
  pessoa_id String @db.VarChar(100)
  pessoa Pessoa @relation(fields: [pessoa_id], references: [id])
  tag String @db.VarChar(100)
  descricao String @db.VarChar(100)
  tempo_calibracao Int @default(0)
  serie String? @db.VarChar(100)
  responsavel String? @db.VarChar(100)
  area String? @db.VarChar(100)
  subarea String? @db.VarChar(100)
  fabricante String? @db.VarChar(100)
  modelo String? @db.VarChar(100)
  observacoes String? @db.Text
  ativo Boolean @default(true)
  data_cadastro DateTime @default(now())
  calibracoes Calibracao[]
  @@map("instrumentos")
  @@unique([pessoa_id, tag])
}

model Calibracao {
  id String @id @default(uuid()) @db.VarChar(100)
  instrumento_id String @db.VarChar(100)
  instrumento Instrumento @relation(fields: [instrumento_id], references: [id])
  data_calibracao DateTime @db.Date
  numero_certificado String @db.VarChar(100)
  laboratorio String? @db.VarChar(100)
  data_cadastro DateTime @default(now())
  @@map("instrumentos_calibracoes")
}